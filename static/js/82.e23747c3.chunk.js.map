{"version":3,"file":"static/js/82.e23747c3.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/MyContacts.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\n\nexport const selectVisibleContacts = createSelector( [selectContacts, selectFilter] ,\n    (contacts, filterQuery) => {\n        const visible = contacts.filter(\n                    contact => contact.name.toLowerCase().includes(filterQuery.toLowerCase())\n                    );\n        return visible;\n    }\n    );","import { selectContacts, selectError, selectFilter, selectVisibleContacts } from \"../../redux/selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteContacts, getContacts } from \"../../redux/contacts/operations\";\nimport { useEffect } from \"react\";\nimport toast from 'react-hot-toast';\nimport { Box, Text, WrapItem, Button, Wrap } from '@chakra-ui/react'\n\nexport const ContactList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const visible = useSelector(selectVisibleContacts);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(getContacts());\n    }, [dispatch]);\n\n\n    const getVisibleContacts = () => {\n    if (filter === \"\") {\n        return contacts;\n    }\n    return visible;\n    };\n\n    const visibleContacts = getVisibleContacts();\n\n    const onDelete = async (id) => {\n            await dispatch(deleteContacts(id));\n            error && toast.error('Error deleting contact.');\n    }\n\n    return (\n        <Box w='400px'>\n            {visibleContacts.map(contact => {\n                const {id, name, number} = contact;\n\n                    return (\n                        <Wrap key={id} marginBottom=\"4px\" justify=\"space-between\">\n                            <WrapItem alignItems=\"center\" >\n                                <Text marginRight=\"10px\">{name}:</Text>\n                                <Text>{number}</Text>\n                            </WrapItem>\n                            <Button colorScheme='teal' size='sm' type='button' onClick={() => onDelete(id)}>Delete</Button>\n                        </Wrap>\n                    )\n                })}\n        </Box>\n    )\n};","import styled from \"styled-components\";\nimport { Field, ErrorMessage } from \"formik\";\n\nexport const Input = styled(Field)`\n    display: block;\n    width: 100%;\n    margin: 8px 0;\n    padding: 16px;\n    font-size: 16px;\n    border-radius: 6px;\n    border: 1px solid #dcdcdc;\n    height: 32px;\n`;\n\nexport const Error = styled(ErrorMessage)`\n    font-size: 16px;\n    color: #c7231b;\n`;\n\n","import { Form, Formik} from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { selectContacts, selectIsLoading } from '../../redux/selectors';\nimport { addNewContact } from '../../redux/contacts/operations';\nimport { Box, FormLabel, Button } from '@chakra-ui/react'\nimport { Error, Input } from './ContactForm.styled';\n\nconst schema = Yup.object().shape({\n    name: Yup.string().min(3, \"Too short\").required('Required'),\n    number: Yup.string().matches(/^(\\d{2,}-\\d{2,}-\\d{2,}|\\d{2,}-\\d{2,}|\\d{5,})$/, \"It must be min 5 numbers (1234567 or 123-45-67)\").required('Required'),\n});\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const isLoading = useSelector(selectIsLoading);\n\n    const onAdd = newContact => {\n        if (contacts.some(contact => contact.name.toLowerCase() === newContact.name.toLowerCase())) {\n            Report.warning(`${newContact.name} is already in contacts.`);\n            return\n        }\n        dispatch(addNewContact(newContact));\n    }\n    return (\n        <Formik\n            initialValues={{\n                name: '',\n                number: '',\n            }}\n            validationSchema={schema}\n            onSubmit={(values, actions) => {\n                onAdd(values);\n                actions.resetForm();\n            }}\n        >\n\n            <Box bg=\"white\" p={8} rounded=\"md\" w='300px'>\n                <Form autoComplete=\"off\">\n                    <FormLabel marginRight=\"0\" htmlFor=\"name\">\n                        Name\n                            <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"New contact\"/>\n                            <Error name=\"name\" component=\"p\"/>\n                    </FormLabel>\n                    <FormLabel marginRight=\"0\" htmlFor=\"number\">\n                        Number\n                            <Input type=\"tel\" name=\"number\" id=\"number\" placeholder=\"Enter a number\"/>\n                            <Error name=\"number\" component=\"p\"/>\n                    </FormLabel>\n                    <Button colorScheme='teal' width=\"100%\" marginTop=\"10px\" type=\"submit\" disabled={isLoading}>Add contact</Button>\n                </Form>\n            </Box>\n        </Formik>\n    )\n}","import styled from \"styled-components\";\n\nexport const Input = styled.input`\n    display: block;\n    width: 100%;\n    margin: 8px 0;\n    padding: 16px;\n    font-size: 16px;\n    border-radius: 6px;\n    border: 1px solid #dcdcdc;\n    height: 32px;\n`;","import { updateFilter } from '../../redux/filterSlice';\nimport { useDispatch } from \"react-redux\";\nimport { Input} from \"./Filter.styled\"\nimport { FormLabel } from '@chakra-ui/react'\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    return (\n        <FormLabel w='300px'>\n            Find contacts by name\n            <Input type=\"text\" name=\"filter\" placeholder=\"Search\" onChange={e => dispatch(updateFilter(e.target.value))} />\n        </FormLabel>\n    )\n}","import { useSelector } from 'react-redux';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { selectIsLoading, selectContacts, selectError } from '../redux/selectors';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { MutatingDots } from \"react-loader-spinner\";\nimport { Toaster } from \"react-hot-toast\";\nimport { Filter } from '../components/Filter/Filter';\nimport { Heading, Box } from '@chakra-ui/react'\n\nexport default function Contcts() {\n    const isLoading = useSelector(selectIsLoading);\n    const contacts = useSelector(selectContacts);\n    const error = useSelector(selectError);\n\n    return (\n        <Box display='flex' gap=\"40px\">\n        <Box>\n            <Heading fontSize='24px' color='teal'>Phonebook</Heading>\n            <ContactForm />\n        </Box>\n        <Box>\n            <Heading fontSize='24px' color='teal' >Contacts</Heading>\n            {contacts.length > 0 ? <Filter/>\n            : (!error && !isLoading && <p>You don't have any contacts</p>) }\n            <ContactList />\n        </Box>\n        {isLoading && <MutatingDots \n            height=\"100\"\n            width=\"100\"\n            color=\"teal\"\n            secondaryColor= 'teal'\n            radius='12.5'\n            ariaLabel=\"mutating-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n        />}\n        <Toaster position=\"top-right\"/>\n        </Box>\n    );\n}"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filterQuery","contact","name","toLowerCase","includes","ContactList","dispatch","useDispatch","useSelector","visible","useEffect","getContacts","visibleContacts","onDelete","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","_context","prev","next","deleteContacts","toast","stop","_x","apply","arguments","_jsx","Box","w","children","map","number","_jsxs","Wrap","marginBottom","justify","WrapItem","alignItems","Text","marginRight","Button","colorScheme","size","type","onClick","Input","styled","Field","_templateObject","_taggedTemplateLiteral","Error","ErrorMessage","_templateObject2","schema","Yup","shape","min","required","matches","ContactForm","Formik","initialValues","validationSchema","onSubmit","values","actions","newContact","some","Report","concat","addNewContact","resetForm","bg","p","rounded","Form","autoComplete","FormLabel","htmlFor","placeholder","component","width","marginTop","disabled","Filter","onChange","e","updateFilter","target","value","Contcts","display","gap","Heading","fontSize","color","length","MutatingDots","height","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","Toaster","position"],"sourceRoot":""}