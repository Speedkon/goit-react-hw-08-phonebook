{"version":3,"file":"static/js/922.9befb13e.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","pages/MyContacts.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\n\nexport const selectVisibleContacts = createSelector( [selectContacts, selectFilter] ,\n    (contacts, filterQuery) => {\n        const visible = contacts.filter(\n                    contact => contact.name.toLowerCase().includes(filterQuery.toLowerCase())\n                    );\n        return visible;\n    }\n    );","import { selectContacts, selectError, selectFilter, selectVisibleContacts } from \"../../redux/selectors\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteContacts, getContacts } from \"../../redux/contacts/operations\";\nimport { useEffect } from \"react\";\nimport toast from 'react-hot-toast';\nimport { Box, Text, WrapItem, Button, Wrap } from '@chakra-ui/react'\n\nexport const ContactList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const visible = useSelector(selectVisibleContacts);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(getContacts());\n    }, [dispatch]);\n\n\n    const getVisibleContacts = () => {\n    if (filter === \"\") {\n        return contacts;\n    }\n    return visible;\n    };\n\n    const visibleContacts = getVisibleContacts();\n\n    const onDelete = async (id) => {\n            await dispatch(deleteContacts(id));\n            error && toast.error('Error deleting contact.');\n    }\n\n    return (\n        <Box w='400px'>\n            {visibleContacts.map(contact => {\n                const {id, name, number} = contact;\n\n                    return (\n                        <Wrap key={id} marginBottom=\"4px\" justify=\"space-between\">\n                            <WrapItem alignItems=\"center\" >\n                                <Text marginRight=\"10px\">{name}:</Text>\n                                <Text>{number}</Text>\n                            </WrapItem>\n                            <Button colorScheme='teal' size='sm' type='button' onClick={() => onDelete(id)}>Delete</Button>\n                        </Wrap>\n                    )\n                })}\n        </Box>\n    )\n};","import { Formik, ErrorMessage} from 'formik';\nimport * as Yup from 'yup';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { selectContacts, selectIsLoading } from '../../redux/selectors';\nimport { addNewContact } from '../../redux/contacts/operations';\nimport { Box, Input, FormLabel, Button } from '@chakra-ui/react'\n\nconst schema = Yup.object().shape({\n    name: Yup.string().min(3, \"Too short\").required('Required'),\n    number: Yup.string().matches(/^(\\d{2,}-\\d{2,}-\\d{2,}|\\d{2,}-\\d{2,}|\\d{5,})$/, \"It must be min 5 numbers (1234567 or 123-45-67)\").required('Required'),\n});\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const isLoading = useSelector(selectIsLoading);\n\n    const onAdd = newContact => {\n        if (contacts.some(contact => contact.name.toLowerCase() === newContact.name.toLowerCase())) {\n            Report.warning(`${newContact.name} is already in contacts.`);\n            return\n        }\n        dispatch(addNewContact(newContact));\n    }\n    return (\n        <Formik\n            initialValues={{\n                name: '',\n                number: '',\n            }}\n            validationSchema={schema}\n            onSubmit={(values, actions) => {\n                onAdd(values);\n                actions.resetForm();\n            }}\n        >\n\n            <Box bg=\"white\" p={8} rounded=\"md\" w='300px'>\n                <form autoComplete=\"off\">\n                    <FormLabel marginRight=\"0\" htmlFor=\"name\">\n                        Name\n                            <Input type=\"text\" name=\"name\" id=\"name\" placeholder=\"New contact\"/>\n                            <ErrorMessage name=\"name\" component=\"p\"/>\n                    </FormLabel>\n                    <FormLabel marginRight=\"0\" htmlFor=\"number\">\n                        Number\n                            <Input type=\"tel\" name=\"number\" id=\"number\" placeholder=\"Enter a number\"/>\n                            <ErrorMessage name=\"number\" component=\"p\"/>\n                    </FormLabel>\n                    <Button colorScheme='teal' width=\"100%\" marginTop=\"10px\" type=\"submit\" disabled={isLoading}>Add contact</Button>\n                </form>\n            </Box>\n        </Formik>\n    )\n}","import { updateFilter } from '../../redux/filterSlice';\nimport { useDispatch } from \"react-redux\";\nimport { Input, FormLabel} from '@chakra-ui/react'\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    return (\n        <FormLabel w='300px'>\n            Find contacts by name\n            <Input type=\"text\" name=\"filter\" placeholder=\"Search\" onChange={e => dispatch(updateFilter(e.target.value))} />\n        </FormLabel>\n    )\n}","import { useSelector } from 'react-redux';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { selectIsLoading, selectContacts, selectError } from '../redux/selectors';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { MutatingDots } from \"react-loader-spinner\";\nimport { Toaster } from \"react-hot-toast\";\nimport { Filter } from '../components/Filter/Filter';\nimport { Heading } from '@chakra-ui/react'\n\nexport default function Contcts() {\n    const isLoading = useSelector(selectIsLoading);\n    const contacts = useSelector(selectContacts);\n    const error = useSelector(selectError);\n\n    return (\n        <>\n        <Heading fontSize='24px' color='teal'>Phonebook</Heading>\n        <ContactForm />\n        <Heading fontSize='24px' color='teal' >Contacts</Heading>\n        {contacts.length > 0 ? <Filter/>\n        : (!error && !isLoading && <p>You don't have any contacts</p>) }\n        <ContactList />\n        {isLoading && <MutatingDots \n            height=\"100\"\n            width=\"100\"\n            color=\"teal\"\n            secondaryColor= 'teal'\n            radius='12.5'\n            ariaLabel=\"mutating-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n        />}\n        <Toaster position=\"top-right\"/>\n        </>\n    );\n}"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filterQuery","contact","name","toLowerCase","includes","ContactList","dispatch","useDispatch","useSelector","visible","useEffect","getContacts","visibleContacts","onDelete","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","_context","prev","next","deleteContacts","toast","stop","_x","apply","arguments","_jsx","Box","w","children","map","number","_jsxs","Wrap","marginBottom","justify","WrapItem","alignItems","Text","marginRight","Button","colorScheme","size","type","onClick","schema","Yup","shape","min","required","matches","ContactForm","Formik","initialValues","validationSchema","onSubmit","values","actions","newContact","some","Report","concat","addNewContact","resetForm","bg","p","rounded","autoComplete","FormLabel","htmlFor","Input","placeholder","ErrorMessage","component","width","marginTop","disabled","Filter","onChange","e","updateFilter","target","value","Contcts","_Fragment","Heading","fontSize","color","length","MutatingDots","height","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","Toaster","position"],"sourceRoot":""}