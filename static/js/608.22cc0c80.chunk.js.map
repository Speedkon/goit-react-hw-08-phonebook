{"version":3,"file":"static/js/608.22cc0c80.chunk.js","mappings":"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","sources":["redux/selectors.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.js","components/Filter/Filter.styled.js","components/Filter/Filter.js","pages/MyContacts.js"],"sourcesContent":["import { createSelector } from \"@reduxjs/toolkit\";\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\n\nexport const selectVisibleContacts = createSelector( [selectContacts, selectFilter] ,\n    (contacts, filterQuery) => {\n        const visible = contacts.filter(\n                    contact => contact.name.toLowerCase().includes(filterQuery.toLowerCase())\n                    );\n        return visible;\n    }\n    );","import styled from \"styled-components\";\n\nexport const AllContacts = styled.ul`\n    margin: 0;\n    padding: 0;\n`\n\nexport const Contact = styled.li`\n    margin-bottom: 4px;\n    list-style: none;\n`\n\nexport const Span = styled.span`\n    font-size: 18px;\n    margin-right: 16px;\n    color: #000033;\n`\n\nexport const Button = styled.button`\n    padding: 8px 12px;\n    color: #000033;\n    font-size: 12px;\n    background-color: transparent;\n    border: none;\n    box-shadow:rgb(130, 138, 158) 0px 2px 5px;\n    &:hover{\n    background-color: #ccccff;\n    box-shadow: rgb(130, 138, 158) 0px 2px 8px;\n    }\n`","import { selectContacts, selectError, selectFilter, selectVisibleContacts } from \"../../redux/selectors\";\nimport { AllContacts, Contact, Span, Button } from \"./ContactList.styled\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteContacts, getContacts } from \"../../redux/contacts/operations\";\nimport { useEffect } from \"react\";\nimport toast from 'react-hot-toast';\n\nexport const ContactList = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n    const visible = useSelector(selectVisibleContacts);\n    const error = useSelector(selectError);\n\n    useEffect(() => {\n        dispatch(getContacts());\n    }, [dispatch]);\n\n\n    const getVisibleContacts = () => {\n    if (filter === \"\") {\n        return contacts;\n    }\n    return visible;\n    };\n\n    const visibleContacts = getVisibleContacts();\n\n    const onDelete = async (id) => {\n            await dispatch(deleteContacts(id));\n            error && toast.error('Error deleting contact.');\n    }\n\n    return (\n        <AllContacts>\n            {visibleContacts.map(contact => {\n                const {id, name, number} = contact;\n\n                    return (\n                        <Contact key={id}>\n                            <Span>{name}:</Span>\n                            <Span>{number}</Span>\n                            <Button type='button' onClick={() => onDelete(id)}>Delete</Button>\n                        </Contact>\n                    )\n                })}\n        </AllContacts>\n    )\n};","import { Form as FormikForm,\n        Field as FormikField,\n        ErrorMessage as FormikError, } from \"formik\";\nimport styled from \"styled-components\";\n\nexport const Form = styled(FormikForm)`\n    margin-bottom: 40px;\n`;\n\nexport const Field = styled(FormikField)`\n    display: block;\n    margin: 8px 0;\n    padding: 4px 8px;\n    font-size: 16px;\n    border-radius: 4px;\n    border: 1px solid #000033;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n    font-size: 16px;\n    color: #800000;\n`;\n\nexport const Label = styled.label`\n    font-size: 18px;\n    color: #000033;\n`;\n\nexport const Button = styled.button`\n    padding: 8px 16px;\n    color: #000033;\n    font-size: 16px;\n    background-color: transparent;\n    border: none;\n    box-shadow:rgb(130, 138, 158) 0px 2px 5px;\n    &:hover{\n    background-color: #ccccff;\n    box-shadow: rgb(130, 138, 158) 0px 2px 8px;\n    }\n`;","import { Formik} from 'formik';\nimport * as Yup from 'yup';\nimport { Field, Form, ErrorMessage, Label, Button } from './ContactForm.styled'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Report } from 'notiflix/build/notiflix-report-aio';\nimport { selectContacts, selectIsLoading } from '../../redux/selectors';\nimport { addNewContact } from '../../redux/contacts/operations';\n\nconst schema = Yup.object().shape({\n    name: Yup.string().min(3, \"Too short\").required('Required'),\n    number: Yup.string().matches(/^(\\d{2,}-\\d{2,}-\\d{2,}|\\d{2,}-\\d{2,}|\\d{5,})$/, \"It must be min 5 numbers (1234567 or 123-45-67)\").required('Required'),\n});\n\nexport const ContactForm = () => {\n    const dispatch = useDispatch();\n    const contacts = useSelector(selectContacts);\n    const isLoading = useSelector(selectIsLoading);\n\n    const onAdd = newContact => {\n        if (contacts.some(contact => contact.name.toLowerCase() === newContact.name.toLowerCase())) {\n            Report.warning(`${newContact.name} is already in contacts.`);\n            return\n        }\n        dispatch(addNewContact(newContact));\n    }\n    return (\n        <Formik\n            initialValues={{\n                name: '',\n                number: '',\n            }}\n            validationSchema={schema}\n            onSubmit={(values, actions) => {\n                onAdd(values);\n                actions.resetForm();\n            }}\n        >\n\n            <Form autoComplete=\"off\">\n                <Label>\n                    Name\n                        <Field type=\"text\" name=\"name\" placeholder=\"New contact\"/>\n                        <ErrorMessage name=\"name\" component=\"p\"/>\n                </Label>\n                <Label>\n                    Number\n                        <Field type=\"tel\" name=\"number\" placeholder=\"Enter a number\"/>\n                        <ErrorMessage name=\"number\" component=\"p\"/>\n                </Label>\n                <Button type=\"submit\" disabled={isLoading}>Add contact</Button>\n            </Form>\n        </Formik>\n    )\n}","import styled from \"styled-components\";\n\nexport const Label = styled.label`\n    font-size: 18px;\n    color: #000033;\n`;\n\nexport const Input = styled.input`\n    display: block;\n    margin: 8px 0 24px;\n    padding: 4px;\n    font-size: 16px;\n    border-radius: 4px;\n    border: 1px solid gray;\n`;","import { updateFilter } from '../../redux/filterSlice';\nimport { Label, Input } from './Filter.styled';\nimport { useDispatch } from \"react-redux\";\n\nexport const Filter = () => {\n    const dispatch = useDispatch();\n    return (\n        <Label>\n            Find contacts by name\n            <Input type=\"text\" name=\"filter\" placeholder=\"Search\" onChange={e => dispatch(updateFilter(e.target.value))} />\n        </Label>\n    )\n}","import { useSelector } from 'react-redux';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { selectIsLoading, selectContacts, selectError } from '../redux/selectors';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { MutatingDots } from \"react-loader-spinner\";\nimport { Toaster } from \"react-hot-toast\";\nimport { Filter } from '../components/Filter/Filter';\n\nexport default function Contcts() {\n    const isLoading = useSelector(selectIsLoading);\n    const contacts = useSelector(selectContacts);\n    const error = useSelector(selectError);\n\n    return (\n        <>\n        <title>Phonebook</title>\n        <ContactForm />\n        <title>Contacts</title>\n        {contacts.length > 0 ? <Filter/>\n        : (!error && !isLoading && <p>You don't have any contacts</p>) }\n        <ContactList />\n        {isLoading && <MutatingDots \n            height=\"100\"\n            width=\"100\"\n            color=\"#4fa94d\"\n            secondaryColor= '#4fa94d'\n            radius='12.5'\n            ariaLabel=\"mutating-dots-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"\"\n            visible={true}\n        />}\n        <Toaster position=\"top-right\"/>\n        </>\n    );\n}"],"names":["selectContacts","state","contacts","items","selectFilter","filter","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filterQuery","contact","name","toLowerCase","includes","AllContacts","styled","_templateObject","_taggedTemplateLiteral","Contact","_templateObject2","Span","_templateObject3","Button","_templateObject4","ContactList","dispatch","useDispatch","useSelector","visible","useEffect","getContacts","visibleContacts","onDelete","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","id","_context","prev","next","deleteContacts","toast","stop","_x","apply","arguments","_jsx","children","map","number","_jsxs","type","onClick","Form","FormikForm","Field","FormikField","ErrorMessage","FormikError","Label","_templateObject5","schema","Yup","shape","min","required","matches","ContactForm","Formik","initialValues","validationSchema","onSubmit","values","actions","newContact","some","Report","concat","addNewContact","resetForm","autoComplete","placeholder","component","disabled","Input","Filter","onChange","e","updateFilter","target","value","Contcts","_Fragment","length","MutatingDots","height","width","color","secondaryColor","radius","ariaLabel","wrapperStyle","wrapperClass","Toaster","position"],"sourceRoot":""}