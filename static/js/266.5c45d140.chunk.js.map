{"version":3,"file":"static/js/266.5c45d140.chunk.js","mappings":"uQAQe,SAASA,IACpB,IAAMC,GAAaC,EAAAA,EAAAA,IAAYC,EAAAA,IACvBC,GAASC,EAAAA,EAAAA,KAATD,KAER,OAAOH,GACKK,EAAAA,EAAAA,MAACC,EAAAA,EAAI,CAACC,UAAU,SAASC,MAAM,SAAQC,SAAA,EACvCJ,EAAAA,EAAAA,MAACK,EAAAA,EAAO,CAAAD,SAAA,CAAC,SAAON,EAAKQ,KAAK,QACtBC,EAAAA,EAAAA,KAACC,EAAAA,EAAM,CAACC,QAAQ,OAAOC,YAAY,OAAMN,UAACG,EAAAA,EAAAA,KAACI,EAAAA,GAAI,CAACC,GAAG,YAAWR,SAAC,yBAI3EG,EAAAA,EAAAA,KAACN,EAAAA,EAAI,CAACY,QAAQ,SAAQT,UAClBG,EAAAA,EAAAA,KAACF,EAAAA,EAAO,CAAAD,SAAC,4BAGrB,C,0JCFaC,GAAUS,EAAAA,EAAAA,IAA+B,SACpDC,EACAC,GAEA,IAAMC,GAASC,EAAAA,EAAAA,IAAe,UAAWH,GACzC,GAA+BI,EAAAA,EAAAA,IAAiBJ,GAA1BK,GAAdC,EAAAA,WAAcD,EAAAA,EAAAA,GAAAA,EAAAA,IAEtB,OACE,SAACE,EAAAA,EAAAA,IAASC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAAA,CACRP,IAAAA,EACAK,WAAWG,EAAAA,EAAAA,IAAG,iBAAkBT,EAAMM,YAClCD,GAAAA,CAAAA,EAAAA,CACJK,MAAOR,IAGb,IAEAZ,EAAQqB,YAAc,S","sources":["pages/Home.js","../node_modules/@chakra-ui/layout/src/heading.tsx"],"sourcesContent":["import { selectIsLoggedIn } from \"../redux/auth/selectors\";\nimport { useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { useAuth } from 'hooks';\nimport { Button } from \"@chakra-ui/react\";\nimport { Heading } from '@chakra-ui/react'\nimport { Flex } from '@chakra-ui/react'\n\nexport default function Home() {\n    const isLoggedIn = useSelector(selectIsLoggedIn);\n    const { user } = useAuth();\n    \n    return isLoggedIn ? (\n                <Flex direction=\"column\" align=\"center\">\n                <Heading>Hello {user.name}!</Heading>\n                    <Button variant='link' colorScheme='teal'><Link to=\"/contacts\">To my contacts</Link></Button>\n                </Flex>\n            \n    ) : (\n        <Flex justify=\"center\">\n            <Heading>Wellcome to Phonebook!</Heading>\n        </Flex>\n    );\n}","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n"],"names":["Home","isLoggedIn","useSelector","selectIsLoggedIn","user","useAuth","_jsxs","Flex","direction","align","children","Heading","name","_jsx","Button","variant","colorScheme","Link","to","justify","forwardRef","props","ref","styles","useStyleConfig","omitThemingProps","rest","className","chakra","h2","cx","__css","displayName"],"sourceRoot":""}